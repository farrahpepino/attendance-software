roles:
- admin: add user to the database, send generated userId to user, admin is inserted in the database using MySql. Thinking of a 
separate app for admin registration
- tutors: update attendance, email admin to call out (?)

Entity Framework ORM
.NET Core (C#)
SQL
Angular

Database: 
attendance-system.SQL

Table Users;
username: name + auto-increment id, auto generated. primary-key
name,
role: admin or user
status: present or absent, default: absent;
createdAt

create trigger when new user is inserted in the database except for admin
Table Schedules;
day (Mon, Tue, Wed, Thurs, Fri, Sat, Sun): [
    shift-1, default null
    shift-2, default null
    shift-3, default null
    break 
]
username primary-key, foreign-key
scheduleId primary-key

create trigger for every status update
Table  logs 
userId,
status

Plan:
Entity-framework

1. schedule bulk

2. get users:
    - present
    - absent

3. get schedules for each day